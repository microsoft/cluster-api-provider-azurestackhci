# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: '$(KNOWN_HOST)' 
    sshPublicKey: '$(SSH_PUBLIC_KEY)'
    sshKeySecureFile: 'azure-pipelines-ssh-key'
- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'
- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: mocimages-connection
- task: GoTool@0
  inputs:
    version: '1.14'

- script: |
    git config --global url.ssh://git@github.com/.insteadOf https://github.com/
    chmod +x hack/ensure-kustomize.sh
    chmod +x hack/gen-flavors.sh
    chmod +x hack/for-pipeline.sh
    hack/ensure-kustomize.sh
    hack/for-pipeline.sh

    GOPATH_BIN="$(go env GOPATH)/bin/"
    PATH=$GOPATH_BIN:$PATH

    RANDOM=$$
    TagNum=$(( $RANDOM % 1000 ))
    make REGISTRY=mocimages.azurecr.io IMAGE_NAME=caphcontroller-staging PATCH_VER=$TagNum docker-build docker-push
    make REGISTRY=mocimages.azurecr.io IMAGE_NAME=caphcontroller-staging PATCH_VER=$TagNum release
    make REGISTRY=mocimages.azurecr.io IMAGE_NAME=caphcontroller-staging PATCH_VER=$TagNum generate-flavors
    make REGISTRY=mocimages.azurecr.io IMAGE_NAME=caphcontroller-staging PATCH_VER=$TagNum release-pipelines
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Build CAPH'

- publish: $(System.DefaultWorkingDirectory)/out
  artifact: releases

- publish: $(System.DefaultWorkingDirectory)/templates
  artifact: templates
  